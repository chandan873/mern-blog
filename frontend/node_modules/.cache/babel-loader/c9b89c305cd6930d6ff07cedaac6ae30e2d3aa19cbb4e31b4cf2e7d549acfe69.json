{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\New folder\\\\src\\\\components\\\\BlogDetail.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get blog ID from URL\n  const [blog, setBlog] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchBlog = async () => {\n      try {\n        const response = await fetch(`http://localhost:5001/blogs/${id}`);\n        if (!response.ok) throw new Error(\"Blog not found\");\n        const data = await response.json();\n        setBlog(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBlog();\n  }, [id]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-center text-gray-500\",\n    children: \"Loading blog...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-center text-red-500\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 py-10\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto bg-white p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5001${blog.image}`,\n        alt: blog.title,\n        className: \"w-full h-64 object-cover rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold mt-4\",\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mt-2\",\n        children: [\"By \", blog.author, \" - \", new Date(blog.date).toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700 mt-4\",\n        children: blog.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"mt-6 inline-block bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600\",\n        children: \"Back to Blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(BlogDetails, \"mlBGqhySJ07c3ZWXtQ4x8sa0Iig=\", false, function () {\n  return [useParams];\n});\n_c = BlogDetails;\nexport default BlogDetails;\nvar _c;\n$RefreshReg$(_c, \"BlogDetails\");","map":{"version":3,"names":["useState","useEffect","useParams","Link","jsxDEV","_jsxDEV","BlogDetails","_s","id","blog","setBlog","loading","setLoading","error","setError","fetchBlog","response","fetch","ok","Error","data","json","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","title","author","Date","date","toDateString","description","to","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/New folder/src/components/BlogDetail.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nconst BlogDetails = () => {\r\n  const { id } = useParams(); // Get blog ID from URL\r\n  const [blog, setBlog] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchBlog = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5001/blogs/${id}`);\r\n        if (!response.ok) throw new Error(\"Blog not found\");\r\n        const data = await response.json();\r\n        setBlog(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchBlog();\r\n  }, [id]);\r\n\r\n  if (loading) return <p className=\"text-center text-gray-500\">Loading blog...</p>;\r\n  if (error) return <p className=\"text-center text-red-500\">{error}</p>;\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 py-10\">\r\n      <div className=\"max-w-4xl mx-auto bg-white p-6 rounded-lg shadow-lg\">\r\n        <img\r\n          src={`http://localhost:5001${blog.image}`}\r\n          alt={blog.title}\r\n          className=\"w-full h-64 object-cover rounded-lg\"\r\n        />\r\n        <h2 className=\"text-3xl font-bold mt-4\">{blog.title}</h2>\r\n        <p className=\"text-gray-600 mt-2\">By {blog.author} - {new Date(blog.date).toDateString()}</p>\r\n        <p className=\"text-gray-700 mt-4\">{blog.description}</p>\r\n        <Link to=\"/\" className=\"mt-6 inline-block bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600\">\r\n          Back to Blogs\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogDetails;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+BT,EAAE,EAAE,CAAC;QACjE,IAAI,CAACQ,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;QACnD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,OAAO,CAACU,IAAI,CAAC;MACf,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZR,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,SAAS;QACRX,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACP,EAAE,CAAC,CAAC;EAER,IAAIG,OAAO,EAAE,oBAAON,OAAA;IAAGmB,SAAS,EAAC,2BAA2B;IAAAC,QAAA,EAAC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAChF,IAAIhB,KAAK,EAAE,oBAAOR,OAAA;IAAGmB,SAAS,EAAC,0BAA0B;IAAAC,QAAA,EAAEZ;EAAK;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAErE,oBACExB,OAAA;IAAKmB,SAAS,EAAC,gCAAgC;IAAAC,QAAA,eAC7CpB,OAAA;MAAKmB,SAAS,EAAC,qDAAqD;MAAAC,QAAA,gBAClEpB,OAAA;QACEyB,GAAG,EAAE,wBAAwBrB,IAAI,CAACsB,KAAK,EAAG;QAC1CC,GAAG,EAAEvB,IAAI,CAACwB,KAAM;QAChBT,SAAS,EAAC;MAAqC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFxB,OAAA;QAAImB,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAEhB,IAAI,CAACwB;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzDxB,OAAA;QAAGmB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,GAAC,KAAG,EAAChB,IAAI,CAACyB,MAAM,EAAC,KAAG,EAAC,IAAIC,IAAI,CAAC1B,IAAI,CAAC2B,IAAI,CAAC,CAACC,YAAY,CAAC,CAAC;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7FxB,OAAA;QAAGmB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAEhB,IAAI,CAAC6B;MAAW;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxDxB,OAAA,CAACF,IAAI;QAACoC,EAAE,EAAC,GAAG;QAACf,SAAS,EAAC,8EAA8E;QAAAC,QAAA,EAAC;MAEtG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CA1CID,WAAW;EAAA,QACAJ,SAAS;AAAA;AAAAsC,EAAA,GADpBlC,WAAW;AA4CjB,eAAeA,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}