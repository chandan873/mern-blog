{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\New folder\\\\src\\\\components\\\\Brain.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Brain.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Brain() {\n  _s();\n\n  const [hoveredDotText, setHoveredDotText] = useState('');\n  const dots = [{\n    id: 1,\n    color: '#FF5733',\n    text: 'Creativity'\n  }, {\n    id: 2,\n    color: '#33FF57',\n    text: 'Memory'\n  }, {\n    id: 3,\n    color: '#3357FF',\n    text: 'Emotion'\n  }, {\n    id: 4,\n    color: '#F1C40F',\n    text: 'Reasoning'\n  }, {\n    id: 5,\n    color: '#9B59B6',\n    text: 'Language'\n  }, {\n    id: 6,\n    color: '#1ABC9C',\n    text: 'Problem Solving'\n  }, {\n    id: 7,\n    color: '#E74C3C',\n    text: 'Attention'\n  }, {\n    id: 8,\n    color: '#F39C12',\n    text: 'Movement'\n  }];\n\n  const handleDotHover = text => {\n    setHoveredDotText(text);\n  };\n\n  const handleDotLeave = () => {\n    setHoveredDotText('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"circle-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circle\",\n      children: [dots.map((dot, index) => {\n        const angle = index * 45; // Divide the circle into 8 sections\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dot\",\n          style: {\n            backgroundColor: dot.color,\n            transform: `rotate(${angle}deg) translate(0, -240px)`,\n            transformOrigin: 'center center'\n          },\n          onMouseEnter: () => handleDotHover(dot.text),\n          onMouseLeave: handleDotLeave\n        }, dot.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"brain-image.jpg\",\n        alt: \"Brain\",\n        className: \"brain-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), hoveredDotText && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-overlay\",\n      children: hoveredDotText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Brain, \"TNm5w53BO0xI3XLjk4SiPSawtlU=\");\n\n_c = Brain;\nexport default Brain;\n\nvar _c;\n\n$RefreshReg$(_c, \"Brain\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/New folder/src/components/Brain.jsx"],"names":["React","useState","Brain","hoveredDotText","setHoveredDotText","dots","id","color","text","handleDotHover","handleDotLeave","map","dot","index","angle","backgroundColor","transform","transformOrigin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCH,QAAQ,CAAC,EAAD,CAApD;AAEA,QAAMI,IAAI,GAAG,CACX;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,SAAhB;AAA2BC,IAAAA,IAAI,EAAE;AAAjC,GADW,EAEX;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,SAAhB;AAA2BC,IAAAA,IAAI,EAAE;AAAjC,GAFW,EAGX;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,SAAhB;AAA2BC,IAAAA,IAAI,EAAE;AAAjC,GAHW,EAIX;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,SAAhB;AAA2BC,IAAAA,IAAI,EAAE;AAAjC,GAJW,EAKX;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,SAAhB;AAA2BC,IAAAA,IAAI,EAAE;AAAjC,GALW,EAMX;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,SAAhB;AAA2BC,IAAAA,IAAI,EAAE;AAAjC,GANW,EAOX;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,SAAhB;AAA2BC,IAAAA,IAAI,EAAE;AAAjC,GAPW,EAQX;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,SAAhB;AAA2BC,IAAAA,IAAI,EAAE;AAAjC,GARW,CAAb;;AAWA,QAAMC,cAAc,GAAID,IAAD,IAAU;AAC/BJ,IAAAA,iBAAiB,CAACI,IAAD,CAAjB;AACD,GAFD;;AAIA,QAAME,cAAc,GAAG,MAAM;AAC3BN,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,iBACGC,IAAI,CAACM,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACxB,cAAMC,KAAK,GAAID,KAAK,GAAG,EAAvB,CADwB,CACI;;AAC5B,4BACE;AAEE,UAAA,SAAS,EAAC,KAFZ;AAGE,UAAA,KAAK,EAAE;AACLE,YAAAA,eAAe,EAAEH,GAAG,CAACL,KADhB;AAELS,YAAAA,SAAS,EAAG,UAASF,KAAM,2BAFtB;AAGLG,YAAAA,eAAe,EAAE;AAHZ,WAHT;AAQE,UAAA,YAAY,EAAE,MAAMR,cAAc,CAACG,GAAG,CAACJ,IAAL,CARpC;AASE,UAAA,YAAY,EAAEE;AAThB,WACOE,GAAG,CAACN,EADX;AAAA;AAAA;AAAA;AAAA,gBADF;AAaD,OAfA,CADH,eAiBE;AAAK,QAAA,GAAG,EAAC,iBAAT;AAA2B,QAAA,GAAG,EAAC,OAA/B;AAAuC,QAAA,SAAS,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAoBGH,cAAc,iBAAI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAA+BA;AAA/B;AAAA;AAAA;AAAA;AAAA,YApBrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA9CMD,K;;KAAAA,K;AAgDT,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport './Brain.css';\r\n\r\nfunction Brain() {\r\n    const [hoveredDotText, setHoveredDotText] = useState('');\r\n\r\n    const dots = [\r\n      { id: 1, color: '#FF5733', text: 'Creativity' },\r\n      { id: 2, color: '#33FF57', text: 'Memory' },\r\n      { id: 3, color: '#3357FF', text: 'Emotion' },\r\n      { id: 4, color: '#F1C40F', text: 'Reasoning' },\r\n      { id: 5, color: '#9B59B6', text: 'Language' },\r\n      { id: 6, color: '#1ABC9C', text: 'Problem Solving' },\r\n      { id: 7, color: '#E74C3C', text: 'Attention' },\r\n      { id: 8, color: '#F39C12', text: 'Movement' },\r\n    ];\r\n  \r\n    const handleDotHover = (text) => {\r\n      setHoveredDotText(text);\r\n    };\r\n  \r\n    const handleDotLeave = () => {\r\n      setHoveredDotText('');\r\n    };\r\n  \r\n    return (\r\n      <div className=\"circle-container\">\r\n        <div className=\"circle\">\r\n          {dots.map((dot, index) => {\r\n            const angle = (index * 45); // Divide the circle into 8 sections\r\n            return (\r\n              <div\r\n                key={dot.id}\r\n                className=\"dot\"\r\n                style={{\r\n                  backgroundColor: dot.color,\r\n                  transform: `rotate(${angle}deg) translate(0, -240px)`,\r\n                  transformOrigin: 'center center',\r\n                }}\r\n                onMouseEnter={() => handleDotHover(dot.text)}\r\n                onMouseLeave={handleDotLeave}\r\n              />\r\n            );\r\n          })}\r\n          <img src=\"brain-image.jpg\" alt=\"Brain\" className=\"brain-img\" />\r\n        </div>\r\n        {hoveredDotText && <div className=\"text-overlay\">{hoveredDotText}</div>}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default Brain;\r\n"]},"metadata":{},"sourceType":"module"}