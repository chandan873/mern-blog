{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\New folder\\\\src\\\\components\\\\BlogPost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BlogPost = () => {\n  _s();\n\n  const {\n    id\n  } = useParams(); // Extract the 'id' from the URL\n\n  const [blog, setBlog] = useState(null);\n  useEffect(() => {\n    const fetchBlog = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/blogs/${id}`);\n        const data = await response.json();\n        setBlog(data); // Set the full blog data\n      } catch (error) {\n        console.error('Error fetching blog content:', error);\n      }\n    };\n\n    fetchBlog();\n  }, [id]);\n\n  if (!blog) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this); // Display a loading message if the blog data is not available\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blogpost\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: blog.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"BY \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: blog.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), \" | \", blog.date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bimg\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: blog.image,\n        alt: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: blog.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BlogPost, \"YJ1dWkjczm0D9AKzIxA9+msCCjc=\", false, function () {\n  return [useParams];\n});\n\n_c = BlogPost;\nexport default BlogPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogPost\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/New folder/src/components/BlogPost.jsx"],"names":["React","useState","useEffect","useParams","BlogPost","id","blog","setBlog","fetchBlog","response","fetch","data","json","error","console","title","author","date","image","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAASF,SAAS,EAAxB,CADqB,CACO;;AAC5B,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BL,EAAG,EAAnC,CAA5B;AACA,cAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAL,QAAAA,OAAO,CAACI,IAAD,CAAP,CAHE,CAGa;AAChB,OAJD,CAIE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACD;AACF,KARD;;AAUAL,IAAAA,SAAS;AACV,GAZQ,EAYN,CAACH,EAAD,CAZM,CAAT;;AAcA,MAAI,CAACC,IAAL,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP,CADS,CACiB;AAC3B;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAA,gBAAKA,IAAI,CAACS;AAAV;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,qCAAM;AAAA,kBAAOT,IAAI,CAACU;AAAZ;AAAA;AAAA;AAAA;AAAA,cAAN,SAAoCV,IAAI,CAACW,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEX,IAAI,CAACY,KAAf;AAAsB,QAAA,GAAG,EAAEZ,IAAI,CAACS;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAME;AAAA,gBAAIT,IAAI,CAACa;AAAT;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAhCD;;GAAMf,Q;UACWD,S;;;KADXC,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst BlogPost = () => {\r\n  const { id } = useParams(); // Extract the 'id' from the URL\r\n  const [blog, setBlog] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchBlog = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/blogs/${id}`);\r\n        const data = await response.json();\r\n        setBlog(data); // Set the full blog data\r\n      } catch (error) {\r\n        console.error('Error fetching blog content:', error);\r\n      }\r\n    };\r\n\r\n    fetchBlog();\r\n  }, [id]);\r\n\r\n  if (!blog) {\r\n    return <p>Loading...</p>; // Display a loading message if the blog data is not available\r\n  }\r\n\r\n  return (\r\n    <div className=\"blogpost\">\r\n      <h1>{blog.title}</h1>\r\n      <p>BY <span>{blog.author}</span> | {blog.date}</p>\r\n      <div className=\"bimg\">\r\n        <img src={blog.image} alt={blog.title} />\r\n      </div>\r\n      <p>{blog.content}</p> {/* Show the full content of the blog */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogPost;\r\n"]},"metadata":{},"sourceType":"module"}