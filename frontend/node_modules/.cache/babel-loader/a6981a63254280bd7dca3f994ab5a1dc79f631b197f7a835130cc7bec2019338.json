{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\New folder\\\\src\\\\components\\\\BlogForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [image, setImage] = useState(null);\n  const [sections, setSections] = useState([{\n    heading: '',\n    paragraph: ''\n  }]);\n\n  // Load author name from localStorage after the component mounts\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"username\");\n    if (storedUsername) {\n      setAuthor(storedUsername);\n    }\n  }, []);\n  const handleSectionChange = (index, field, value) => {\n    const updatedSections = [...sections];\n    updatedSections[index][field] = value;\n    setSections(updatedSections);\n  };\n  const addSection = () => {\n    setSections([...sections, {\n      heading: '',\n      paragraph: ''\n    }]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('author', author); // Send the logged-in user's name\n    if (image) formData.append('image', image);\n    formData.append('sections', JSON.stringify(sections));\n    try {\n      await axios.post('http://localhost:5001/blogs', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Blog uploaded successfully');\n    } catch (error) {\n      alert('Error uploading blog');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-lg mx-auto bg-white rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Upload Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        className: \"border p-2 w-full mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-2 text-gray-700\",\n        children: [\"Author: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: author || \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 59\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setImage(e.target.files[0]),\n        className: \"border p-2 w-full mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), sections.map((section, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Heading\",\n          value: section.heading,\n          onChange: e => handleSectionChange(index, 'heading', e.target.value),\n          className: \"border p-2 w-full mb-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Paragraph\",\n          value: section.paragraph,\n          onChange: e => handleSectionChange(index, 'paragraph', e.target.value),\n          className: \"border p-2 w-full mb-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addSection,\n        className: \"bg-gray-300 px-4 py-2 rounded mb-2\",\n        children: \"Add Section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(BlogForm, \"NPNtbskiZJRWpteXepbxqli5vB4=\");\n_c = BlogForm;\nexport default BlogForm;\nvar _c;\n$RefreshReg$(_c, \"BlogForm\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","BlogForm","_s","title","setTitle","author","setAuthor","image","setImage","sections","setSections","heading","paragraph","storedUsername","localStorage","getItem","handleSectionChange","index","field","value","updatedSections","addSection","handleSubmit","e","preventDefault","formData","FormData","append","JSON","stringify","post","headers","alert","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","target","files","map","section","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/New folder/src/components/BlogForm.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BlogForm = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n    const [image, setImage] = useState(null);\r\n    const [sections, setSections] = useState([{ heading: '', paragraph: '' }]);\r\n\r\n    // Load author name from localStorage after the component mounts\r\n    useEffect(() => {\r\n        const storedUsername = localStorage.getItem(\"username\");\r\n        if (storedUsername) {\r\n            setAuthor(storedUsername);\r\n        }\r\n    }, []);\r\n\r\n    const handleSectionChange = (index, field, value) => {\r\n        const updatedSections = [...sections];\r\n        updatedSections[index][field] = value;\r\n        setSections(updatedSections);\r\n    };\r\n\r\n    const addSection = () => {\r\n        setSections([...sections, { heading: '', paragraph: '' }]);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('title', title);\r\n        formData.append('author', author); // Send the logged-in user's name\r\n        if (image) formData.append('image', image);\r\n        formData.append('sections', JSON.stringify(sections));\r\n\r\n        try {\r\n            await axios.post('http://localhost:5001/blogs', formData, {\r\n                headers: { 'Content-Type': 'multipart/form-data' }\r\n            });\r\n            alert('Blog uploaded successfully');\r\n        } catch (error) {\r\n            alert('Error uploading blog');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-6 max-w-lg mx-auto bg-white rounded shadow\">\r\n            <h2 className=\"text-xl font-bold mb-4\">Upload Blog</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Title\" \r\n                    value={title} \r\n                    onChange={(e) => setTitle(e.target.value)} \r\n                    className=\"border p-2 w-full mb-2\" \r\n                />\r\n\r\n                {/* Show Author Name Instead of Input Field */}\r\n                <p className=\"mb-2 text-gray-700\">Author: <strong>{author || \"Loading...\"}</strong></p>\r\n\r\n                <input \r\n                    type=\"file\" \r\n                    onChange={(e) => setImage(e.target.files[0])} \r\n                    className=\"border p-2 w-full mb-2\" \r\n                />\r\n\r\n                {sections.map((section, index) => (\r\n                    <div key={index} className=\"mb-4\">\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Heading\" \r\n                            value={section.heading} \r\n                            onChange={(e) => handleSectionChange(index, 'heading', e.target.value)} \r\n                            className=\"border p-2 w-full mb-2\" \r\n                        />\r\n                        <textarea \r\n                            placeholder=\"Paragraph\" \r\n                            value={section.paragraph} \r\n                            onChange={(e) => handleSectionChange(index, 'paragraph', e.target.value)} \r\n                            className=\"border p-2 w-full mb-2\">\r\n                        </textarea>\r\n                    </div>\r\n                ))}\r\n\r\n                <button type=\"button\" onClick={addSection} className=\"bg-gray-300 px-4 py-2 rounded mb-2\">Add Section</button>\r\n                <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BlogForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}